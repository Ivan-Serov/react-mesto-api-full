{"ast":null,"code":"import _objectSpread from \"/home/ivan/react-mesto-api-full/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/ivan/react-mesto-api-full/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ivan/react-mesto-api-full/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/* class Api {\n  constructor(url, token) {\n    this._url = url;\n    this._authorizationToken = token;\n    this._headers ={authorization:this._authorizationToken, 'Content-Type': 'application/json'};\n  }\n  _getAuthHeader() {\n    const jwt = localStorage.getItem('jwt');\n    return jwt ? { Authorization: `Bearer ${jwt}` } : {};\n  }\n  getUserInfo() {\n    return fetch(this._url +'/users/me', {\n      method: 'GET',\n      headers: {\n        authorization: this._authorizationToken\n      }})\n    .then(this.checkResult);\n  }\n  getInitialCards() {\n    return fetch(this._url +'/cards', {\n      headers: {\n        authorization: this._authorizationToken\n      }})\n    .then(this.checkResult);\n  }\n  editProfile(data){\n    return fetch(this._url +'/users/me', {\n        method: 'PATCH',\n        headers: this._headers,\n        body: JSON.stringify(data)\n      })\n    .then(this.checkResult);\n  }\n  addPlace(data){\n    return fetch(this._url +'/cards', {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify(data)\n    })\n    .then(this.checkResult);\n  }\n  deletePost(cardId) {\n    return fetch(this._url + '/cards/' + cardId, {\n      method: 'DELETE',\n      headers: this._headers,\n    })\n    .then(this.checkResult);\n  }\n  addLike(cardId){\n    return fetch(this._url + '/cards/likes/' + cardId, {\n      method: 'PUT',\n      headers: this._headers,\n    })\n    .then(this.checkResult);\n  }\n  deleteLike(cardId){\n    return fetch(this._url + '/cards/likes/' + cardId, {\n      method: 'DELETE',\n      headers: this._headers,\n    })\n    .then(this.checkResult);\n  }\n  addAvatar(avatar){\n    return fetch(this._url +'/users/me/avatar', {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(avatar)\n    })\n    .then(this.checkResult);\n  }\n  checkResult = res => {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  }\n} */\nvar Api = /*#__PURE__*/function () {\n  function Api(_ref) {\n    var url = _ref.url,\n        headers = _ref.headers;\n\n    _classCallCheck(this, Api);\n\n    this._url = url;\n    this._headers = headers;\n  }\n\n  _createClass(Api, [{\n    key: \"_getAuthHeader\",\n    value: function _getAuthHeader() {\n      var jwt = localStorage.getItem('jwt');\n      return jwt ? {\n        Authorization: \"Bearer \".concat(jwt)\n      } : {};\n    }\n  }, {\n    key: \"checkResult\",\n    value: function checkResult(res) {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));\n      }\n    }\n  }, {\n    key: \"getUserInfo\",\n    value: function getUserInfo() {\n      var _this = this;\n\n      return fetch(\"\".concat(this._url, \"users/me\"), {\n        method: 'GET',\n        headers: _objectSpread({}, this._headers, this._getAuthHeader())\n      }).then(function (res) {\n        return _this.checkResult(res);\n      });\n    }\n  }, {\n    key: \"editProfile\",\n    value: function editProfile(data) {\n      var _this2 = this;\n\n      return fetch(\"\".concat(this._url, \"users/me\"), {\n        method: 'PATCH',\n        headers: _objectSpread({}, this._headers, this._getAuthHeader()),\n        body: JSON.stringify({\n          name: data.name,\n          about: data.about\n        })\n      }).then(function (res) {\n        return _this2.checkResult(res);\n      });\n    }\n  }, {\n    key: \"getInitialCards\",\n    value: function getInitialCards() {\n      var _this3 = this;\n\n      return fetch(\"\".concat(this._url, \"cards\"), {\n        method: 'GET',\n        headers: _objectSpread({}, this._headers, this._getAuthHeader())\n      }).then(function (res) {\n        return _this3.checkResult(res);\n      });\n    }\n  }, {\n    key: \"addPlace\",\n    value: function addPlace(data) {\n      var _this4 = this;\n\n      return fetch(\"\".concat(this._url, \"cards\"), {\n        method: 'POST',\n        headers: _objectSpread({}, this._headers, this._getAuthHeader()),\n        body: JSON.stringify({\n          name: data.name,\n          link: data.link\n        })\n      }).then(function (res) {\n        return _this4.checkResult(res);\n      });\n    }\n  }, {\n    key: \"deletePost\",\n    value: function deletePost(cardId) {\n      var _this5 = this;\n\n      return fetch(\"\".concat(this._url, \"cards/\").concat(cardId), {\n        method: 'DELETE',\n        headers: _objectSpread({}, this._headers, this._getAuthHeader())\n      }).then(function (res) {\n        return _this5.checkResult(res);\n      });\n    }\n  }, {\n    key: \"addLikeCard\",\n    value: function addLikeCard(id) {\n      var _this6 = this;\n\n      return fetch(\"\".concat(this._url, \"cards/\").concat(id, \"/likes\"), {\n        method: 'PUT',\n        headers: _objectSpread({}, this._headers, this._getAuthHeader())\n      }).then(function (res) {\n        return _this6.checkResult(res);\n      });\n    }\n  }, {\n    key: \"removeLikeCard\",\n    value: function removeLikeCard(id) {\n      var _this7 = this;\n\n      return fetch(\"\".concat(this._url, \"cards/\").concat(id, \"/likes\"), {\n        method: 'DELETE',\n        headers: _objectSpread({}, this._headers, this._getAuthHeader())\n      }).then(function (res) {\n        return _this7.checkResult(res);\n      });\n    }\n  }, {\n    key: \"setUserAvatar\",\n    value: function setUserAvatar(data) {\n      var _this8 = this;\n\n      return fetch(\"\".concat(this._url, \"users/me/avatar\"), {\n        method: 'PATCH',\n        headers: _objectSpread({}, this._headers, this._getAuthHeader()),\n        body: JSON.stringify({\n          avatar: data\n        })\n      }).then(function (res) {\n        return _this8.checkResult(res);\n      });\n    }\n  }]);\n\n  return Api;\n}();\n\nvar api = new Api({\n  url: 'http://localhost:3001',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport default api; //export const api = new Api('http://localhost:3001'/* , '' */);\n//https://nomoreparties.co/v1/cohort-28 // d0022a9e-a6be-4d9a-ab6e-3949875c7c34","map":{"version":3,"sources":["/home/ivan/react-mesto-api-full/frontend/src/utils/Api.js"],"names":["Api","url","headers","_url","_headers","jwt","localStorage","getItem","Authorization","res","ok","json","Promise","reject","status","fetch","method","_getAuthHeader","then","checkResult","data","body","JSON","stringify","name","about","link","cardId","id","avatar","api"],"mappings":"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","sourcesContent":["/* class Api {\n  constructor(url, token) {\n    this._url = url;\n    this._authorizationToken = token;\n    this._headers ={authorization:this._authorizationToken, 'Content-Type': 'application/json'};\n  }\n  _getAuthHeader() {\n    const jwt = localStorage.getItem('jwt');\n    return jwt ? { Authorization: `Bearer ${jwt}` } : {};\n  }\n  getUserInfo() {\n    return fetch(this._url +'/users/me', {\n      method: 'GET',\n      headers: {\n        authorization: this._authorizationToken\n      }})\n    .then(this.checkResult);\n  }\n  getInitialCards() {\n    return fetch(this._url +'/cards', {\n      headers: {\n        authorization: this._authorizationToken\n      }})\n    .then(this.checkResult);\n  }\n  editProfile(data){\n    return fetch(this._url +'/users/me', {\n        method: 'PATCH',\n        headers: this._headers,\n        body: JSON.stringify(data)\n      })\n    .then(this.checkResult);\n  }\n  addPlace(data){\n    return fetch(this._url +'/cards', {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify(data)\n    })\n    .then(this.checkResult);\n  }\n  deletePost(cardId) {\n    return fetch(this._url + '/cards/' + cardId, {\n      method: 'DELETE',\n      headers: this._headers,\n    })\n    .then(this.checkResult);\n  }\n  addLike(cardId){\n    return fetch(this._url + '/cards/likes/' + cardId, {\n      method: 'PUT',\n      headers: this._headers,\n    })\n    .then(this.checkResult);\n  }\n  deleteLike(cardId){\n    return fetch(this._url + '/cards/likes/' + cardId, {\n      method: 'DELETE',\n      headers: this._headers,\n    })\n    .then(this.checkResult);\n  }\n  addAvatar(avatar){\n    return fetch(this._url +'/users/me/avatar', {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(avatar)\n    })\n    .then(this.checkResult);\n  }\n  checkResult = res => {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  }\n} */\nclass Api {\n  constructor({ url, headers }) {\n    this._url = url;\n    this._headers = headers;\n  }\n\n  _getAuthHeader() {\n    const jwt = localStorage.getItem('jwt');\n    return jwt ? { Authorization: `Bearer ${jwt}` } : {};\n  }\n\n\n  checkResult(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  }\n\n  getUserInfo() {\n    return fetch(`${this._url}users/me`, {\n      method: 'GET',\n      headers: { ...this._headers, ...this._getAuthHeader() },\n    }).then((res) => {\n      return this.checkResult(res);\n    });\n  }\n\n  editProfile(data) {\n    return fetch(`${this._url}users/me`, {\n      method: 'PATCH',\n      headers: { ...this._headers, ...this._getAuthHeader() },\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about,\n      }),\n    }).then((res) => {\n      return this.checkResult(res);\n    });\n  }\n\n  getInitialCards() {\n    return fetch(`${this._url}cards`, {\n      method: 'GET',\n      headers: { ...this._headers, ...this._getAuthHeader() },\n    }).then((res) => {\n      return this.checkResult(res);\n    });\n  }\n\n  addPlace(data) {\n    return fetch(`${this._url}cards`, {\n      method: 'POST',\n      headers: { ...this._headers, ...this._getAuthHeader() },\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link,\n      }),\n    }).then((res) => {\n      return this.checkResult(res);\n    });\n  }\n\n  deletePost(cardId) {\n    return fetch(`${this._url}cards/${cardId}`, {\n      method: 'DELETE',\n      headers: { ...this._headers, ...this._getAuthHeader() },\n    }).then((res) => {\n      return this.checkResult(res);\n    });\n  }\n\n  addLikeCard(id) {\n    return fetch(`${this._url}cards/${id}/likes`, {\n      method: 'PUT',\n      headers: { ...this._headers, ...this._getAuthHeader() },\n    }).then((res) => {\n      return this.checkResult(res);\n    });\n  }\n\n  removeLikeCard(id) {\n    return fetch(`${this._url}cards/${id}/likes`, {\n      method: 'DELETE',\n      headers: { ...this._headers, ...this._getAuthHeader() },\n    }).then((res) => {\n      return this.checkResult(res);\n    });\n  }\n\n  setUserAvatar(data) {\n    return fetch(`${this._url}users/me/avatar`, {\n      method: 'PATCH',\n      headers: { ...this._headers, ...this._getAuthHeader() },\n      body: JSON.stringify({\n        avatar: data,\n      }),\n    }).then((res) => {\n      return this.checkResult(res);\n    });\n  }\n}\n\nconst api = new Api({\n  url: 'http://localhost:3001',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nexport default api;\n//export const api = new Api('http://localhost:3001'/* , '' */);\n//https://nomoreparties.co/v1/cohort-28 // d0022a9e-a6be-4d9a-ab6e-3949875c7c34"]},"metadata":{},"sourceType":"module"}