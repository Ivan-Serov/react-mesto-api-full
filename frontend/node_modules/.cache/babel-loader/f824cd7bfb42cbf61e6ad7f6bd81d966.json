{"ast":null,"code":"import _classCallCheck from \"/home/ivan/react-mesto-api-full/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ivan/react-mesto-api-full/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar Api = /*#__PURE__*/function () {\n  function Api(url\n  /* , token */\n  ) {\n    _classCallCheck(this, Api);\n\n    this.checkResult = function (res) {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));\n      }\n    };\n\n    this._url = url;\n    /* this._authorizationToken = token; */\n\n    this._headers = {\n      authorization: this._authorizationToken,\n      'Content-Type': 'application/json'\n    };\n  }\n\n  _createClass(Api, [{\n    key: \"_getAuthHeader\",\n    value: function _getAuthHeader() {\n      var jwt = localStorage.getItem('jwt');\n      return jwt ? {\n        Authorization: \"Bearer \".concat(jwt)\n      } : {};\n    }\n  }, {\n    key: \"getUserInfo\",\n    value: function getUserInfo() {\n      return fetch(this._url + '/users/me', {\n        method: 'GET',\n        headers: {\n          authorization: this._authorizationToken\n        }\n      }).then(this.checkResult);\n    }\n  }, {\n    key: \"getInitialCards\",\n    value: function getInitialCards() {\n      return fetch(this._url + '/cards', {\n        headers: {\n          authorization: this._authorizationToken\n        }\n      }).then(this.checkResult);\n    }\n  }, {\n    key: \"editProfile\",\n    value: function editProfile(data) {\n      return fetch(this._url + '/users/me', {\n        method: 'PATCH',\n        headers: this._headers,\n        body: JSON.stringify(data)\n      }).then(this.checkResult);\n    }\n  }, {\n    key: \"addPlace\",\n    value: function addPlace(data) {\n      return fetch(this._url + '/cards', {\n        method: 'POST',\n        headers: this._headers,\n        body: JSON.stringify(data)\n      }).then(this.checkResult);\n    }\n  }, {\n    key: \"deletePost\",\n    value: function deletePost(cardId) {\n      return fetch(this._url + '/cards/' + cardId, {\n        method: 'DELETE',\n        headers: this._headers\n      }).then(this.checkResult);\n    }\n  }, {\n    key: \"addLike\",\n    value: function addLike(cardId) {\n      return fetch(this._url + '/cards/likes/' + cardId, {\n        method: 'PUT',\n        headers: this._headers\n      }).then(this.checkResult);\n    }\n  }, {\n    key: \"deleteLike\",\n    value: function deleteLike(cardId) {\n      return fetch(this._url + '/cards/likes/' + cardId, {\n        method: 'DELETE',\n        headers: this._headers\n      }).then(this.checkResult);\n    }\n  }, {\n    key: \"addAvatar\",\n    value: function addAvatar(avatar) {\n      return fetch(this._url + '/users/me/avatar', {\n        method: 'PATCH',\n        headers: this._headers,\n        body: JSON.stringify(avatar)\n      }).then(this.checkResult);\n    }\n  }]);\n\n  return Api;\n}();\n\nexport var api = new Api('http://localhost:3001'\n/* , '' */\n); //https://nomoreparties.co/v1/cohort-28 // d0022a9e-a6be-4d9a-ab6e-3949875c7c34","map":{"version":3,"sources":["/home/ivan/react-mesto-api-full/frontend/src/utils/Api.js"],"names":["Api","url","checkResult","res","ok","json","Promise","reject","status","_url","_headers","authorization","_authorizationToken","jwt","localStorage","getItem","Authorization","fetch","method","headers","then","data","body","JSON","stringify","cardId","avatar","api"],"mappings":"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","sourcesContent":["class Api {\n  constructor(url/* , token */) {\n    this._url = url;\n    /* this._authorizationToken = token; */\n    this._headers ={authorization:this._authorizationToken, 'Content-Type': 'application/json'};\n  }\n  _getAuthHeader() {\n    const jwt = localStorage.getItem('jwt');\n    return jwt ? { Authorization: `Bearer ${jwt}` } : {};\n  }\n  getUserInfo() {\n    return fetch(this._url +'/users/me', {\n      method: 'GET',\n      headers: {\n        authorization: this._authorizationToken\n      }})\n    .then(this.checkResult);\n  }\n  getInitialCards() {\n    return fetch(this._url +'/cards', {\n      headers: {\n        authorization: this._authorizationToken\n      }})\n    .then(this.checkResult);\n  }\n  editProfile(data){\n    return fetch(this._url +'/users/me', {\n        method: 'PATCH',\n        headers: this._headers,\n        body: JSON.stringify(data)\n      })\n    .then(this.checkResult);\n  }\n  addPlace(data){\n    return fetch(this._url +'/cards', {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify(data)\n    })\n    .then(this.checkResult);\n  }\n  deletePost(cardId) {\n    return fetch(this._url + '/cards/' + cardId, {\n      method: 'DELETE',\n      headers: this._headers,\n    })\n    .then(this.checkResult);\n  }\n  addLike(cardId){\n    return fetch(this._url + '/cards/likes/' + cardId, {\n      method: 'PUT',\n      headers: this._headers,\n    })\n    .then(this.checkResult);\n  }\n  deleteLike(cardId){\n    return fetch(this._url + '/cards/likes/' + cardId, {\n      method: 'DELETE',\n      headers: this._headers,\n    })\n    .then(this.checkResult);\n  }\n  addAvatar(avatar){\n    return fetch(this._url +'/users/me/avatar', {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(avatar)\n    })\n    .then(this.checkResult);\n  }\n  checkResult = res => {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  }\n}\nexport const api = new Api('http://localhost:3001'/* , '' */);\n//https://nomoreparties.co/v1/cohort-28 // d0022a9e-a6be-4d9a-ab6e-3949875c7c34"]},"metadata":{},"sourceType":"module"}