{"ast":null,"code":"import { baseToken } from \"./constants\";\n/* class Api {\n  constructor(url, headers, token) {\n    this._url = url;\n    this._authorizationToken = token;\n    //this._headers = headers;\n    this._headers ={Authorization:this._authorizationToken, 'Content-Type': 'application/json'};\n  }\n  _getAuthHeader() {\n    const jwt = localStorage.getItem('jwt');\n    return jwt ? { Authorization: `Bearer ${jwt}` } : {};\n  }\n  getUserInfo() {\n    return fetch(this._url +'/users/me', {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MzA0YjYyYTA0NzFjMTdlNGYxMTczMzYiLCJpYXQiOjE2NjEyNjU4OTgsImV4cCI6MTY2MTg3MDY5OH0.-oclzIeC4662HrGxIwxFaT7VNgL80WlPbuPno8lFlkc`\n        //Authorization: this._authorizationToken \n      }})\n    .then(this.checkResult);\n  }\n  getInitialCards() {\n    return fetch(this._url +'/cards', {\n      method: 'GET',\n      headers: {\n        Authorization: this._authorizationToken\n        //Authorization: `Bearer ${localStorage.getItem('jwt')}` \n      }})\n    .then(this.checkResult);\n  }\n  editProfile(data){\n    return fetch(this._url +'/users/me', {\n        method: 'PATCH',\n        headers: this._headers,\n        body: JSON.stringify(data)\n      })\n    .then(this.checkResult);\n  }\n  addPlace(data){\n    return fetch(this._url +'/cards', {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify(data)\n    })\n    .then(this.checkResult);\n  }\n  deletePost(cardId) {\n    return fetch(this._url + '/cards/' + cardId, {\n      method: 'DELETE',\n      headers: this._headers,\n    })\n    .then(this.checkResult);\n  }\n  addLike(cardId){\n    return fetch(this._url + '/cards/likes/' + cardId, {\n      method: 'PUT',\n      headers: this._headers,\n    })\n    .then(this.checkResult);\n  }\n  deleteLike(cardId){\n    return fetch(this._url + '/cards/likes/' + cardId, {\n      method: 'DELETE',\n      headers: this._headers,\n    })\n    .then(this.checkResult);\n  }\n  addAvatar(avatar){\n    return fetch(this._url +'/users/me/avatar', {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(avatar)\n    })\n    .then(this.checkResult);\n  }\n  checkResult = res => {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  }\n} */\n\n/* class Api {\n  constructor({ url, headers }) {\n    this._url = url;\n    this._headers = headers;\n  }\n\n  _getAuthHeader() {\n    const jwt = localStorage.getItem('jwt');\n    return jwt ? { Authorization: `Bearer ${jwt}` } : {};\n  }\n\n\n  checkResult(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  }\n\n  getUserInfo() {\n    return fetch(`${this._url}users/me`, {\n      method: 'GET',\n      headers: { ...this._headers, ...this._getAuthHeader() },\n    }).then((res) => {\n      return this.checkResult(res);\n    });\n  }\n\n  editProfile(data) {\n    return fetch(`${this._url}users/me`, {\n      method: 'PATCH',\n      headers: { ...this._headers, ...this._getAuthHeader() },\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about,\n      }),\n    }).then((res) => {\n      return this.checkResult(res);\n    });\n  }\n\n  getInitialCards() {\n    return fetch(`${this._url}cards`, {\n      method: 'GET',\n      headers: { ...this._headers, ...this._getAuthHeader() },\n    }).then((res) => {\n      return this.checkResult(res);\n    });\n  }\n\n  addPlace(data) {\n    return fetch(`${this._url}cards`, {\n      method: 'POST',\n      headers: { ...this._headers, ...this._getAuthHeader() },\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link,\n      }),\n    }).then((res) => {\n      return this.checkResult(res);\n    });\n  }\n\n  deletePost(cardId) {\n    return fetch(`${this._url}cards/${cardId}`, {\n      method: 'DELETE',\n      headers: { ...this._headers, ...this._getAuthHeader() },\n    }).then((res) => {\n      return this.checkResult(res);\n    });\n  }\n\n  addLike(id) {\n    return fetch(`${this._url}cards/${id}/likes`, {\n      method: 'PUT',\n      headers: { ...this._headers, ...this._getAuthHeader() },\n    }).then((res) => {\n      return this.checkResult(res);\n    });\n  }\n\n  deleteLike(id) {\n    return fetch(`${this._url}cards/${id}/likes`, {\n      method: 'DELETE',\n      headers: { ...this._headers, ...this._getAuthHeader() },\n    }).then((res) => {\n      return this.checkResult(res);\n    });\n  }\n\n  addAvatar(data) {\n    return fetch(`${this._url}users/me/avatar`, {\n      method: 'PATCH',\n      headers: { ...this._headers, ...this._getAuthHeader() },\n      body: JSON.stringify({\n        avatar: data,\n      }),\n    }).then((res) => {\n      return this.checkResult(res);\n    });\n  }\n}\n\nconst api = new Api({\n  url: 'http://localhost:3001',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nexport default api; */\n\nexport var api = new Api('http://localhost:3001', baseToken); //https://nomoreparties.co/v1/cohort-28 // d0022a9e-a6be-4d9a-ab6e-3949875c7c34","map":{"version":3,"sources":["/home/ivan/react-mesto-api-full/frontend/src/utils/Api.js"],"names":["baseToken","api","Api"],"mappings":"AAAA,SAASA,SAAT,QAA0B,auBAAR,EAAiCF,SAAjC,CAAZ,C,CACP","sourcesContent":["import { baseToken } from \"./constants\";\n\n/* class Api {\n  constructor(url, headers, token) {\n    this._url = url;\n    this._authorizationToken = token;\n    //this._headers = headers;\n    this._headers ={Authorization:this._authorizationToken, 'Content-Type': 'application/json'};\n  }\n  _getAuthHeader() {\n    const jwt = localStorage.getItem('jwt');\n    return jwt ? { Authorization: `Bearer ${jwt}` } : {};\n  }\n  getUserInfo() {\n    return fetch(this._url +'/users/me', {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MzA0YjYyYTA0NzFjMTdlNGYxMTczMzYiLCJpYXQiOjE2NjEyNjU4OTgsImV4cCI6MTY2MTg3MDY5OH0.-oclzIeC4662HrGxIwxFaT7VNgL80WlPbuPno8lFlkc`\n        //Authorization: this._authorizationToken \n      }})\n    .then(this.checkResult);\n  }\n  getInitialCards() {\n    return fetch(this._url +'/cards', {\n      method: 'GET',\n      headers: {\n        Authorization: this._authorizationToken\n        //Authorization: `Bearer ${localStorage.getItem('jwt')}` \n      }})\n    .then(this.checkResult);\n  }\n  editProfile(data){\n    return fetch(this._url +'/users/me', {\n        method: 'PATCH',\n        headers: this._headers,\n        body: JSON.stringify(data)\n      })\n    .then(this.checkResult);\n  }\n  addPlace(data){\n    return fetch(this._url +'/cards', {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify(data)\n    })\n    .then(this.checkResult);\n  }\n  deletePost(cardId) {\n    return fetch(this._url + '/cards/' + cardId, {\n      method: 'DELETE',\n      headers: this._headers,\n    })\n    .then(this.checkResult);\n  }\n  addLike(cardId){\n    return fetch(this._url + '/cards/likes/' + cardId, {\n      method: 'PUT',\n      headers: this._headers,\n    })\n    .then(this.checkResult);\n  }\n  deleteLike(cardId){\n    return fetch(this._url + '/cards/likes/' + cardId, {\n      method: 'DELETE',\n      headers: this._headers,\n    })\n    .then(this.checkResult);\n  }\n  addAvatar(avatar){\n    return fetch(this._url +'/users/me/avatar', {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(avatar)\n    })\n    .then(this.checkResult);\n  }\n  checkResult = res => {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  }\n} */\n/* class Api {\n  constructor({ url, headers }) {\n    this._url = url;\n    this._headers = headers;\n  }\n\n  _getAuthHeader() {\n    const jwt = localStorage.getItem('jwt');\n    return jwt ? { Authorization: `Bearer ${jwt}` } : {};\n  }\n\n\n  checkResult(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  }\n\n  getUserInfo() {\n    return fetch(`${this._url}users/me`, {\n      method: 'GET',\n      headers: { ...this._headers, ...this._getAuthHeader() },\n    }).then((res) => {\n      return this.checkResult(res);\n    });\n  }\n\n  editProfile(data) {\n    return fetch(`${this._url}users/me`, {\n      method: 'PATCH',\n      headers: { ...this._headers, ...this._getAuthHeader() },\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about,\n      }),\n    }).then((res) => {\n      return this.checkResult(res);\n    });\n  }\n\n  getInitialCards() {\n    return fetch(`${this._url}cards`, {\n      method: 'GET',\n      headers: { ...this._headers, ...this._getAuthHeader() },\n    }).then((res) => {\n      return this.checkResult(res);\n    });\n  }\n\n  addPlace(data) {\n    return fetch(`${this._url}cards`, {\n      method: 'POST',\n      headers: { ...this._headers, ...this._getAuthHeader() },\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link,\n      }),\n    }).then((res) => {\n      return this.checkResult(res);\n    });\n  }\n\n  deletePost(cardId) {\n    return fetch(`${this._url}cards/${cardId}`, {\n      method: 'DELETE',\n      headers: { ...this._headers, ...this._getAuthHeader() },\n    }).then((res) => {\n      return this.checkResult(res);\n    });\n  }\n\n  addLike(id) {\n    return fetch(`${this._url}cards/${id}/likes`, {\n      method: 'PUT',\n      headers: { ...this._headers, ...this._getAuthHeader() },\n    }).then((res) => {\n      return this.checkResult(res);\n    });\n  }\n\n  deleteLike(id) {\n    return fetch(`${this._url}cards/${id}/likes`, {\n      method: 'DELETE',\n      headers: { ...this._headers, ...this._getAuthHeader() },\n    }).then((res) => {\n      return this.checkResult(res);\n    });\n  }\n\n  addAvatar(data) {\n    return fetch(`${this._url}users/me/avatar`, {\n      method: 'PATCH',\n      headers: { ...this._headers, ...this._getAuthHeader() },\n      body: JSON.stringify({\n        avatar: data,\n      }),\n    }).then((res) => {\n      return this.checkResult(res);\n    });\n  }\n}\n\nconst api = new Api({\n  url: 'http://localhost:3001',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nexport default api; */\nexport const api = new Api('http://localhost:3001', baseToken);\n//https://nomoreparties.co/v1/cohort-28 // d0022a9e-a6be-4d9a-ab6e-3949875c7c34"]},"metadata":{},"sourceType":"module"}